@startuml Container
!include <C4/C4_Container>

Person(person, "Клиент", "Подает заявку на подключение домашнего интернета")
System_Boundary(system, "Система заявок") {
    Container(feContainer, "Веб-сайт оператора связи", "JavaScript and React", "Предоставляет форму создания новой заявки")
    Container(mobileAppContainer, "Мобильное приложение оператора связи", "Andoid/IOS and Kotlin Multiplatform", "Предоставляет возможность определения текущего местоположения, создания новой заявки")
    Container(beContainer, "Бэкенд-приложение оператора связи", "Java/Kotlin and Akka/Play/Lagom", "Предоставляет функциональность системы заявок через. API JSON/HTTPS")
    Container(beRequestsContainer, "Сервис проверки доступности подключения", "Java/Kotlin and Akka", "Проверяет адрес на доступность подключения. Если БД адресов не доступна, то заводит задачу для последующей проверки адреса. API JSON/HTTPS")
    Container(beNotificationsContainer, "Сервис отправки уведомлений", "Java/Kotlin and Akka", "Позволяет отправлять сообщения на email или через push нотификации. API JSON/HTTPS")
    ContainerDb(dbAllContainer, "База данных всех адресов")
    ContainerDb(dbAvailableContainer, "База данных адресов доступных для подключения")
    ContainerDb(dbCheckTasksContainer, "База данных задач на проверку доступности к подключению")

}
System_Ext(geoIpSystem, "Geo IP System", "Система для определения местоположения по IP-адресу или координатам GPS")
System_Ext(emailSystem, "Email System", "Система для отправки email сообщений")
System_Ext(pushSystem, "Push Notifications System", "Система для отправки push уведомлений")

Rel(person, feContainer, "Поиск адреса, проверка возможности подключения, оформление заявки", "HTTPS")
Rel(person, mobileAppContainer, "Поиск адреса, проверка возможности подключения, оформление заявки")
Rel(feContainer, beContainer, "Вызов API", "JSON/HTTPS")
Rel(mobileAppContainer, beContainer, "Вызов API", "JSON/HTTPS")
Rel(beContainer, dbAllContainer, "Чтение", "JDBC")
Rel_D(beContainer, geoIpSystem, "Получить адрес по IP-адресу или координатам GPS", "JSON/HTTPS")
Rel_D(beContainer, beRequestsContainer, "Проверить адрес на доступность подключения", "JSON/HTTPS")
Rel(beRequestsContainer, dbAvailableContainer, "Чтение", "JDBC")
Rel(beRequestsContainer, dbCheckTasksContainer, "Чтение/Запись", "JDBC")
Rel(beRequestsContainer, beNotificationsContainer, "Вызов API", "JSON/HTTPS")
Rel(beNotificationsContainer, emailSystem, "Отправить сообщение по email")
Rel(beNotificationsContainer, pushSystem, "Отправить push нотификацию на телефон")
Rel(emailSystem, person, "Отправляет email сообщение клиенту")
Rel(pushSystem, mobileAppContainer, "Отправляет push нотификацию")
Rel_U(mobileAppContainer, person, "Отображает push нотификацию")

SHOW_LEGEND()
@enduml
